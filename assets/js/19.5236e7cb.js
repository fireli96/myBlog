(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{418:function(t,a,e){"use strict";e.r(a);var v=e(0),r=Object(v.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"js-知识点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-知识点"}},[t._v("#")]),t._v(" js 知识点")]),t._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),e("p",[t._v("实时记录在使用 "),e("code",[t._v("js")]),t._v(" 过程中遇到的问题和学习到的新知识点。")]),t._v(" "),e("h2",{attrs:{id:"if-语句判断"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#if-语句判断"}},[t._v("#")]),t._v(" if 语句判断")]),t._v(" "),e("h3",{attrs:{id:"判断真假"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#判断真假"}},[t._v("#")]),t._v(" 判断真假")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("flag")]),t._v(' 判读为假时：false、0（包括+0、-0、0.0）、null、undefined、""、NaN\n'),e("code",[t._v("flag")]),t._v(" 判读为真时：对象、数组、非空字符串、true、任何定义了的函数 （空对象、空数组也为真）")]),t._v(" "),e("h3",{attrs:{id:"判断空对象空数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#判断空对象空数组"}},[t._v("#")]),t._v(" 判断空对象空数组")]),t._v(" "),e("p",[t._v("空数组：Array.length === 0")]),t._v(" "),e("p",[t._v("空对象：")]),t._v(" "),e("ol",[e("li",[t._v("Object.keys().length === 0")]),t._v(" "),e("li",[t._v("for...in")]),t._v(" "),e("li",[t._v("JSON.stringify() (注意抛出异常)")])]),t._v(" "),e("h2",{attrs:{id:"隐式转换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#隐式转换"}},[t._v("#")]),t._v(" 隐式转换")]),t._v(" "),e("h3",{attrs:{id:"转换规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#转换规则"}},[t._v("#")]),t._v(" 转换规则")]),t._v(" "),e("ol",[e("li",[t._v("null 和 undefined 自身相等，且 null == undefined，除此之外和其他任何值不宽松相等（==）。")]),t._v(" "),e("li",[t._v("NaN 不与任何值相等，包括自身。")]),t._v(" "),e("li",[t._v("x、y 为 Number 和 String 类型时，则转换为 Number 类型比较。")]),t._v(" "),e("li",[t._v("有 Boolean 类型时，Boolean 转化为 Number 类型比较。")]),t._v(" "),e("li",[t._v("一个 Object 类型，一个 String 或 Number 类型，将 Object 类型进行 ToPrimitive (原始转换)后，按上面流程进行原始值比较。")])]),t._v(" "),e("p",[t._v("原始值即基础类型：Undefined、 Null、 String、 Number、 Boolean、 Symbol。")]),t._v(" "),e("p",[t._v("简单来说：")]),t._v(" "),e("ol",[e("li",[t._v("有 Number 和 Boolean，需要转换为 Number 类型比较，都是字符串直接比较。")]),t._v(" "),e("li",[t._v("有 Object 先将 Object 调用 valueOf 或者 toString 转换，再按照 1 比较。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://fireli-1256465711.cos.ap-chengdu.myqcloud.com/img/20200630102412_fa4c0eb43e7f7f6c53e1991a7fa9c914.png",alt:"img/20200630102412_fa4c0eb43e7f7f6c53e1991a7fa9c914.png"}})]),t._v(" "),e("h3",{attrs:{id:"toboolean"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#toboolean"}},[t._v("#")]),t._v(" ToBoolean")]),t._v(" "),e("p",[t._v('除了 false、0（包括+0、-0、0.0）、null、undefined、""、NaN，其他都为真。')]),t._v(" "),e("h3",{attrs:{id:"tonumber"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tonumber"}},[t._v("#")]),t._v(" ToNumber")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("结果")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("undefined")]),t._v(" "),e("td",[t._v("NaN")])]),t._v(" "),e("tr",[e("td",[t._v("null")]),t._v(" "),e("td",[t._v("+0")])]),t._v(" "),e("tr",[e("td",[t._v("布尔")]),t._v(" "),e("td",[t._v("true 转换为 1，false 转换为+0")])]),t._v(" "),e("tr",[e("td",[t._v("字符串")]),t._v(" "),e("td",[t._v('可解析为数字转化为数字，例如："-3.156"转换为-3.156，"asd"转换为 NaN，空字符串\'\'转换为 0')])]),t._v(" "),e("tr",[e("td",[t._v("对象")]),t._v(" "),e("td",[t._v("先进行 ToPrimitive(obj, Number)转换得到原始值，在进行 ToNumber 转换为数字")])])])]),t._v(" "),e("h3",{attrs:{id:"tostring"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tostring"}},[t._v("#")]),t._v(" ToString")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("结果")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("undefined")]),t._v(" "),e("td",[t._v("'undefined'")])]),t._v(" "),e("tr",[e("td",[t._v("null")]),t._v(" "),e("td",[t._v("'null'")])]),t._v(" "),e("tr",[e("td",[t._v("布尔")]),t._v(" "),e("td",[t._v("转换为'true' 或 'false'")])]),t._v(" "),e("tr",[e("td",[t._v("数字")]),t._v(" "),e("td",[t._v("转换字符串，比如：1.765 转为'1.765'，1e21 转为\"1e+21\"")])]),t._v(" "),e("tr",[e("td",[t._v("对象")]),t._v(" "),e("td",[t._v("先进行 ToPrimitive(obj, String)转换得到原始值，在进行 ToString 转换为字符串")])])])]),t._v(" "),e("h3",{attrs:{id:"toprimitive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#toprimitive"}},[t._v("#")]),t._v(" ToPrimitive")]),t._v(" "),e("p",[t._v("ToPrimitive(obj, Number)")]),t._v(" "),e("ol",[e("li",[t._v("先调用 obj 的 valueOf()方法，如果 valueOf()方法的返回值是一个原始值，则返回这个原始值。")]),t._v(" "),e("li",[t._v("否则，调用这个对象的 toString()方法，如果 toString()方法返回的是一个原始值，则返回这个原始值。")]),t._v(" "),e("li",[t._v("否则，抛出 TypeError 异常。")])]),t._v(" "),e("p",[t._v("ToPrimitive(obj, String)")]),t._v(" "),e("ol",[e("li",[t._v("先调用 obj 的 toString()方法，如果 toString()方法的返回值是一个原始值，则返回这个原始值。")]),t._v(" "),e("li",[t._v("否则，调用这个对象的 valueOf()方法，如果 valueOf()方法返回的是一个原始值，则返回这个原始值。")]),t._v(" "),e("li",[t._v("否则，抛出 TypeError 异常。")])]),t._v(" "),e("blockquote",[e("p",[t._v("除了 Date 先调用 toString()方法，其他对象都是先调用 valueOf()。")])]),t._v(" "),e("h3",{attrs:{id:"valueof-和-tostring"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#valueof-和-tostring"}},[t._v("#")]),t._v(" valueOf 和 toString")]),t._v(" "),e("p",[t._v("valueOf：Date 对象返回日期的毫秒数，String、Boolean、Number 返回原始值，其它对象返回对象本身。")]),t._v(" "),e("p",[t._v("toString：")]),t._v(" "),e("ol",[e("li",[t._v('Array：将数组元素用","连接成一个字符串，数组中空数组[]、null、undefined 转为空字符串，数组中 object 按照 ToPrimitive 方式转换，层叠的数组会被依次拆分。')]),t._v(" "),e("li",[t._v('普通对象：调用 Object.prototype.toString()，返回"[object Object]"。')])]),t._v(" "),e("blockquote",[e("p",[t._v("Symbol 对象无法隐式转换为原始值和字符串，即隐式转换时，Symbol 对象不会自动调用 valueOf 或者 toString。")])]),t._v(" "),e("h3",{attrs:{id:"其他隐式转换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他隐式转换"}},[t._v("#")]),t._v(" 其他隐式转换")]),t._v(" "),e("h4",{attrs:{id:"加号"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#加号"}},[t._v("#")]),t._v(" 加号")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("如果有 String 类型，那么其他类型都会转换为 String 类型。")])]),t._v(" "),e("li",[e("p",[t._v("没有 String 类型，那么都会转换为 Number 类型。")])]),t._v(" "),e("li",[e("p",[t._v("有 Object 类型的，先将 Object 使用 valueOf 或 toString 转换为原始值(规则见上面 ToPrimitive)，再依据 1、2 步骤。")])])]),t._v(" "),e("h4",{attrs:{id:"减、乘、除、取余、大于、小于"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#减、乘、除、取余、大于、小于"}},[t._v("#")]),t._v(" 减、乘、除、取余、大于、小于")]),t._v(" "),e("p",[t._v("都是转换为 Number。")]),t._v(" "),e("h4",{attrs:{id:"非元素（-）、if（condition）、与（-）、或（-）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#非元素（-）、if（condition）、与（-）、或（-）"}},[t._v("#")]),t._v(" 非元素（!）、if（condition）、与（&&）、或（||）")]),t._v(" "),e("p",[t._v("都是转换为 Boolean，即 ToBoolean。")]),t._v(" "),e("p",[e("code",[t._v("a || b")]),t._v("表示："),e("code",[t._v("a")]),t._v("转换成 Boolean 为真，返回 "),e("code",[t._v("a")]),t._v("，否则返回 "),e("code",[t._v("b")]),t._v("。")]),t._v(" "),e("p",[e("code",[t._v("a && b")]),t._v("表示："),e("code",[t._v("a")]),t._v("转换成 Boolean 为真，返回 "),e("code",[t._v("b")]),t._v("，否则返回 "),e("code",[t._v("a")]),t._v("。")]),t._v(" "),e("p",[e("code",[t._v("a && b || c")]),t._v("表示：先执行"),e("code",[t._v("a && b")]),t._v("，返回值再和"),e("code",[t._v("c")]),t._v("运算。")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("a")]),t._v(" 为真，且 "),e("code",[t._v("b")]),t._v(" 为真，返回 "),e("code",[t._v("b")]),t._v("；")]),t._v(" "),e("li",[e("code",[t._v("a")]),t._v(" 为真，但 "),e("code",[t._v("b")]),t._v(" 为假，返回 "),e("code",[t._v("c")]),t._v("；")]),t._v(" "),e("li",[e("code",[t._v("a")]),t._v(" 为假，返回 "),e("code",[t._v("c")]),t._v("。")]),t._v(" "),e("li",[t._v("即只有"),e("code",[t._v("a")]),t._v("、"),e("code",[t._v("b")]),t._v("同真时返回"),e("code",[t._v("b")]),t._v("，否则返回"),e("code",[t._v("c")]),t._v("。")])]),t._v(" "),e("h3",{attrs:{id:"参考文献"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),e("ol",[e("li",[e("a",{attrs:{href:"https://juejin.im/post/5a7172d9f265da3e3245cbca#heading-7",target:"_blank",rel:"noopener noreferrer"}},[t._v("你所忽略的 js 隐式转换"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.im/post/5a7172d9f265da3e3245cbca#heading-7",target:"_blank",rel:"noopener noreferrer"}},[t._v("从一道面试题说起—js 隐式转换踩坑合集"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.jianshu.com/p/a429e4940c33",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 隐式转换"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.cnblogs.com/ihboy/p/6700059.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Js 中那些 隐式转换"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"parseint、isnan-和-number-注意点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parseint、isnan-和-number-注意点"}},[t._v("#")]),t._v(" parseInt、isNaN 和 Number 注意点")]),t._v(" "),e("h3",{attrs:{id:"parseint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parseint"}},[t._v("#")]),t._v(" parseInt")]),t._v(" "),e("p",[t._v("语法：parseInt(string [ , radix])")]),t._v(" "),e("p",[t._v("参数：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("string")]),t._v(" "),e("ol",[e("li",[t._v("string 的开头和结尾的空格会被忽略")]),t._v(" "),e("li",[t._v("string 的第一个字符不能被转换为数字，返回 NaN。")]),t._v(" "),e("li",[t._v("第一个字符能转换为数字，检查第二字符，直到发现不能转换成有效数字的字符，把这个字符之前的字符串转换为数字")]),t._v(" "),e("li",[t._v('string 以 "0x" 开头，其余部分解析为十六进制的整数，但返回十进制数。')])]),t._v(" "),e("blockquote",[e("p",[t._v('string 以"0"为开始时旧的浏览器默认使用八进制基数。ECMAScript 5，默认的是十进制的基数。')])])]),t._v(" "),e("li",[e("p",[t._v("radix：表示基数，可选，指定 string 的的进制")]),t._v(" "),e("ol",[e("li",[t._v("介于 2 ~ 36")]),t._v(" "),e("li",[t._v('如果指定的进制和前面 string 不符，返回 NaN，例如：parseInt("30",2)')])])])]),t._v(" "),e("h3",{attrs:{id:"number"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[t._v("#")]),t._v(" Number")]),t._v(" "),e("p",[t._v("对应上面的 ToNumber 规则。")]),t._v(" "),e("h3",{attrs:{id:"number-和-parseint-区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#number-和-parseint-区别"}},[t._v("#")]),t._v(" Number 和 parseInt 区别")]),t._v(" "),e("ol",[e("li",[t._v("Number 对于字符串转数字会比 parseInt 更为严格，Number 是字符串中有无法转换为数字的字符，直接返回 NaN。")]),t._v(" "),e("li",[t._v("parseInt 只能转换字符串，对于其他类型，都需要按照相应规则先转换为字符串。")])]),t._v(" "),e("h3",{attrs:{id:"isnan"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isnan"}},[t._v("#")]),t._v(" isNaN")]),t._v(" "),e("p",[t._v("isNaN() 函数，对于非 Number 的参数，会首先将其转换为 Number。")]),t._v(" "),e("ol",[e("li",[t._v('数字形式的字符串。例如 "123"、"-3.14"，虽然是字符串型，但被 isNaN() 判为数， 返回 false。（"12,345,678"，"1.2.3" 这些返回 true）')]),t._v(" "),e("li",[t._v('空值。null、空字符串""、空数组[]，都可被 Number()合法的转为 0，于是被 isNaN 认为是数，返回 false。（undefined、空对象{}、空函数等无法转数字，返回 true）')]),t._v(" "),e("li",[t._v("布尔值。Number(true)=1,Number(false)=0，所以 isNaN 对布尔值也返回 false。")]),t._v(" "),e("li",[t._v('长度为 1 的数组。结果取决于其中元素，即：isNaN([a])=isNaN(a)，可递归。例如 isNaN([["1.5"]])=false。')]),t._v(" "),e("li",[t._v('数字特殊形式。例如"0xabc"、"2.5e+7"，这样的十六进制和科学计数法，即使是字符串 也能转数字，所以也返回 false。')])])])}),[],!1,null,null,null);a.default=r.exports}}]);