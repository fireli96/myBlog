(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{441:function(t,a,s){"use strict";s.r(a);var r=s(0),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"工具函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工具函数"}},[t._v("#")]),t._v(" 工具函数")]),t._v(" "),s("h2",{attrs:{id:"文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档"}},[t._v("#")]),t._v(" 文档")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://sparklinm.github.io/js-library/module-common.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("记录平时使用到的工具函数和工具类"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("h3",{attrs:{id:"数组扁平化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组扁平化"}},[t._v("#")]),t._v(" 数组扁平化")]),t._v(" "),s("p",[s("code",[t._v("Array.flat()")]),t._v("（兼容性不好）。")]),t._v(" "),s("h2",{attrs:{id:"对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[t._v("#")]),t._v(" 对象")]),t._v(" "),s("h3",{attrs:{id:"展开运算符获得有条件的对象属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#展开运算符获得有条件的对象属性"}},[t._v("#")]),t._v(" 展开运算符获得有条件的对象属性")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'John'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  surname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Doe'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" email"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'john@doe.com'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"动态属性名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态属性名"}},[t._v("#")]),t._v(" 动态属性名")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dynamic "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'John'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dynamic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'john@doe.com'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"正则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则"}},[t._v("#")]),t._v(" 正则")]),t._v(" "),s("p",[t._v("匹配 "),s("code",[t._v("ab")]),t._v(" 开头，"),s("code",[t._v("cd")]),t._v(" 结尾，且中间不能出现 "),s("code",[t._v("cd")]),t._v("：")]),t._v(" "),s("p",[s("code",[t._v("/ab[\\w\\W]*?cd/")])]),t._v(" "),s("p",[s("code",[t._v("*?")]),t._v(", "),s("code",[t._v(".?")]),t._v(", "),s("code",[t._v("+?")]),t._v("表示非贪婪匹配。正常的匹配是匹配尽可能多，然后再回溯，判断是否满足接下来的条件。")]),t._v(" "),s("p",[t._v("例如正则表达式为 "),s("code",[t._v("/ab[\\w\\W]*cd/")]),t._v("，对于字符串 "),s("code",[t._v("xxab123456sscd999")]),t._v("，"),s("code",[t._v("[\\w\\W]")]),t._v(" 表达式会直接匹配到最后，然后再回溯，判断是否满足 "),s("code",[t._v("cd")]),t._v(" 条件。而如果正则为 "),s("code",[t._v("/ab[\\w\\W]*?cd/")]),t._v("，"),s("code",[t._v("[\\w\\W]")]),t._v(" 每匹配成功，就会立即匹配接下来的 "),s("code",[t._v("cd")]),t._v(" 条件。")])])}),[],!1,null,null,null);a.default=e.exports}}]);